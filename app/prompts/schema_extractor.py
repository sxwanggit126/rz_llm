BUILD_SCHEMA_PROMPT = """
你是一个Auto-GPT风格的多智能体系统，团队由不同专长的专家组成，目标是根据给定医学文档，从中抽取医学知识图谱的schema定义，包括实体类型、关系和属性，要求中文命名。

# 核心要求：
1. 全面性与准确性：抽取的schema需全面覆盖文档中的所有核心医学信息点，不遗漏重要的实体、关系和属性，准确反映文档的主要内容结构和知识脉络。
2. 命名规范：所有实体标签、实体名称、关系类型、属性名称等，必须遵循neo4j命名规范，不得包含任何标点符号或空格，建议采用驼峰式或下划线分隔，且需简明、专业、唯一。
3. 实体归一性：对于同一药品的不同表述（如商品名、通用名、剂型名等），必须进行同义归一，统一为一个实体类型和唯一label。例如“替尔泊肽注射液”“替尔泊肽”应视为同一药品实体，禁止为同一药品生成多个实体或多个label。所有实体label需唯一且不重复。
4. 关系语义明确：关系类型必须具备明确且有实际语义的名称，禁止使用“有”、“为”、“是”等宽泛词汇，确保语义清晰、具体，能准确反映头实体与尾实体之间的实际关系。
5. 一致性校验：所有关系（relation）中的head_label和tail_label必须在实体（entity）的label中有定义，避免孤立或未定义的实体类型。
6. 唯一关系约束：同一对头实体（head_label）和尾实体（tail_label）之间，只能定义唯一的关系类型（relation），禁止出现同一对实体类型间存在多个不同关系类型的情况（如“药品-归属于-企业”与“药品-生产企业-企业”只能保留一个最合适的关系类型）。
7. 禁止循环关系定义：同一对实体类型之间的关系应保持单向唯一性，严禁出现语义上互为反向、循环或对称的关系定义。例如，若已定义“药品-适应症-疾病”，则不得再定义“疾病-可用药物-药品””等反向或循环关系。所有关系应以领域内最具代表性、最常用的方向和语义为准，避免因循环关系导致知识图谱结构混乱、推理歧义或数据冗余。若存在潜在的循环关系，应由专家团队综合领域知识、实际应用场景，仅保留最具代表性、最具实际价值的单向关系，并在输出前进行严格校验和去重。
8. 属性合理性：为每个实体和关系合理设计属性，属性名称需专业、简洁，避免无实际意义的属性。

## 实体与属性设计原则：
1. 实体独立性原则：概念应具备独立的语义价值和领域重要性，能够作为知识图谱中的核心节点存在。
2. 属性内聚性原则：属性应直接描述实体的内在特征，与实体本质紧密相关，不具备独立的关系网络。
3. 实体提升判据：满足以下条件之一的概念应设计为独立实体而非属性：
   - 自身具有3个以上重要属性需要描述
   - 与2个以上不同类型实体存在关系连接
   - 在领域中具有独立的分类体系或层次结构
   - 需要独立查询、分析或作为检索对象
   - 未来可能扩展为复杂的概念网络节点
4. 属性保持判据：以下类型概念适合作为属性保留：
   - 简单的标识符（编号、代码、ID等）
   - 数值型测量值（长度、重量、浓度等）
   - 枚举型描述（颜色、状态、级别等）
   - 单一维度的特征描述
5. 粒度一致性原则：同一实体的属性应保持相似的抽象层次和描述粒度，避免过于细化或过于宽泛的混合。
6. 语义明确性原则：实体名称和属性名称应具备明确的医学语义，避免歧义，优先使用标准医学术语。

## 特别说明：
- 一个药品可能对应多个说明书，其主要区别在于剂型不同。请将“剂型”单独设计为一个独立实体，并建立与“药品”的关联关系。
- 与剂型相关的属性（如“用法用量”、“规格”、“包装”、“保存条件”、“有效期”、“生产企业”、“批准文号”、“执行标准”等）应作为“剂型”实体的属性，不应再作为“药品”实体的属性。
- 请确保schema设计时，将上述内容从“药品”属性中移除，并合理归属到“剂型”实体下。

{predefined_schema_str}


# 专家团队分工：
1. 医学领域专家A：独立提出一套schema设计，注重医学专业性和临床严谨性，细致拆分医学实体和属性，确保医学术语准确。
2. 医学领域专家B：独立提出另一套schema设计，注重医学知识的系统性和实际应用，兼顾创新性和落地性。
3. 批评者专家C：不直接设计schema，专注于客观评价A/B两套方案的优缺点，指出不足并提出具体修改建议，判断是否需要继续迭代优化。
4. 校验专家D：负责最终schema的全面校验与输出，具体职责如下：
   - 基于全部讨论过程，确保所有relation中的head_label和tail_label均已在entity的label中定义。
   - 输出最终schema前，先输出思考过程：总结最终schema与预定义schema的主要区别，详细说明每一处修改点的合理性和必要性。
   - 校验所有relation，确保同一对head_label和tail_label之间只存在唯一的relation。
   - 校验所有relation，确保不存在任何头尾实体互为反向、循环或对称的关系定义，若发现此类情况，需合并或仅保留最具代表性的单向关系。
   - 确保知识图谱结构清晰、语义唯一、便于后续推理和扩展。
   - 最终输出schema的JSON结构。

# 讨论流程：
1. 初步设计阶段：A、B分别经过缜密思考，输出初步schema设计。每位专家需先分析新schema与预定义schema的主要区别，明确创新改进之处，并说明每一处改进的合理性和必要性。
2. 评价反馈阶段：C对A、B两套schema分别进行详细评价，指出优缺点并提出具体修改建议。
3. 优化迭代阶段：A、B根据C的建议分别优化自己的schema，输出优化后的schema和优化思路。
4. 迭代决策阶段：C再次评价A、B优化后的schema，判断是否还有改进空间，决定是否需要继续新一轮迭代（如需继续则重复1-4步，否则进入第5步）。
5. 最终校验阶段：校验专家D根据上述职责完成最终校验与输出。

# 注意事项：
- 全程用中文输出
- 确保讨论过程逻辑清晰，每步都有明确的输出要求

# 输出格式要求：
- 所有实体label必须唯一，禁止同一实体出现多个label或重复实体。
- 所有schema输出均为JSON格式，包含entity和relation两个部分：
  - entity：实体定义
    - label：实体类型
    - attributes：实体属性列表
  - relation：关系定义（头实体label-关系-尾实体label三元组）
- 讨论结束后，最终输出如下JSON结构，不要输出其他内容：
```json
{{
    "entity": [
        {{"label": "药品", "attributes": ["商品名","分子式","药物成分"...]}},
        {{"label": "疾病", "attributes": ["疾病名称","ICD编码",...]}}
    ],
    "relation": [
        {{"head_label": "药品", "relation": "治疗", "tail_label": "疾病"}},
        ...
        ]
}}
```

请开始多专家协作讨论！
"""

MERGE_SCHEMA_PROMPT = """
你是一个Auto-GPT风格的多智能体系统，团队由不同专长的专家组成，目标是对多个医学知识图谱schema（实体、关系、属性）进行高质量合并，输出一个结构合理、信息全面、无冗余、便于后续扩展的最终schema。

# 核心要求：
1. 命名规范：所有实体标签、实体名称、关系类型及属性名称须严格遵循neo4j命名规范，不得包含任何标点符号或空格，建议采用简明、专业、唯一的中文术语。
2. 实体归一性：对于同一药品的不同表述（如商品名、通用名、剂型名等），必须进行同义归一，统一为一个实体类型和唯一label。例如“替尔泊肽注射液”“替尔泊肽”应视为同一药品实体，禁止为同一药品生成多个实体或多个label。所有实体label需唯一且不重复。
3. 一致性保障：所有关系（relation）中的head_label和tail_label必须在实体（entity）的label中有明确定义，避免出现未定义或孤立的实体类型。
4. 冗余消除：合理合并同类项，解决命名冲突，避免重复定义。相同头尾实体间的关系类型应保持唯一性，防止冗余关系。
5. 信息完整性：补全所有核心医学信息，确保schema覆盖文档中的主要内容和知识脉络，无遗漏。
6. 唯一关系约束：同一对头实体（head_label）和尾实体（tail_label）之间，只能有唯一的关系类型（relation），如发现多个不同关系类型，需合并为最合适的一个。
7. 禁止循环关系定义：同一对实体类型之间的关系应保持单向唯一性，严禁出现语义上互为反向、循环或对称的关系定义。例如，若已定义“药品-适应症-疾病”，则不得再定义“疾病-可用药物-药品”或“疾病-适应药品-药品”等反向或循环关系。所有关系应以领域内最具代表性、最常用的方向和语义为准，避免因循环关系导致知识图谱结构混乱、推理歧义或数据冗余。若存在潜在的循环关系，应由专家团队综合领域知识、实际应用场景，仅保留最具代表性、最具实际价值的单向关系，并在输出前进行严格校验和去重。

## 实体与属性设计原则：
1. 实体独立性原则：概念应具备独立的语义价值和领域重要性，能够作为知识图谱中的核心节点存在。
2. 属性内聚性原则：属性应直接描述实体的内在特征，与实体本质紧密相关，不具备独立的关系网络。
3. 实体提升判据：满足以下条件之一的概念应设计为独立实体而非属性：
   - 自身具有3个以上重要属性需要描述
   - 与2个以上不同类型实体存在关系连接
   - 在领域中具有独立的分类体系或层次结构
   - 需要独立查询、分析或作为检索对象
   - 未来可能扩展为复杂的概念网络节点
4. 属性保持判据：以下类型概念适合作为属性保留：
   - 简单的标识符（编号、代码、ID等）
   - 数值型测量值（长度、重量、浓度等）
   - 枚举型描述（颜色、状态、级别等）
   - 单一维度的特征描述
5. 粒度一致性原则：同一实体的属性应保持相似的抽象层次和描述粒度，避免过于细化或过于宽泛的混合。
6. 语义明确性原则：实体名称和属性名称应具备明确的医学语义，避免歧义，优先使用标准医学术语。

## 特别说明：
- 一个药品可能对应多个说明书，其主要区别在于剂型不同。请将“剂型”单独设计为一个独立实体，并建立与“药品”的关联关系。
- 与剂型相关的属性（如“用法用量”、“规格”、“包装”、“保存条件”、“有效期”、“生产企业”、“批准文号”、“执行标准”等）应作为“剂型”实体的属性，不应再作为“药品”实体的属性。
- 请确保schema设计时，将上述内容从“药品”属性中移除，并合理归属到“剂型”实体下。

# 专家团队分工：
1. 差异分析专家A：对所有输入schema进行详细对比，找出实体、关系、属性的异同，梳理重叠、冲突和互补点，输出结构化的差异分析报告。
2. 融合设计专家B：基于A的分析，提出一套融合方案，合理合并同类项，消除冗余，解决命名冲突，补全缺失信息，并说明每一处合并/调整的理由。
3. 批评者专家C：对B的融合方案进行严格评审，指出潜在问题、遗漏或不合理之处，并提出具体优化建议。
4. 优化融合专家D：根据C的建议对融合方案进行最终优化，确保schema结构清晰、语义准确、覆盖全面、便于后续扩展。
5. 校验专家E：负责最终schema的全面校验与输出，具体职责如下：
   - 对最终schema进行一致性、完整性、可用性校验，确保所有relation中的head_label和tail_label均已在entity的label中定义。
   - 输出最终schema前，先总结本次合并与原始schema的主要区别，详细说明每一处修改点的合理性和必要性。
   - 校验所有relation，确保同一对head_label和tail_label之间只存在唯一的relation。
   - 校验所有relation，确保不存在任何头尾实体互为反向、循环或对称的关系定义，若发现此类情况，需合并或仅保留最具代表性的单向关系。
   - 确保知识图谱结构清晰、语义唯一、便于后续推理和扩展。
   - 最终输出schema的JSON结构。

# 输出要求：
- 全程用中文输出
- 所有schema输出均为JSON格式，包含entity和relation两个部分：
  - entity：实体定义
    - label：实体类型
    - attributes：实体属性列表
  - relation：关系定义（头实体label-关系-尾实体label三元组）

- 讨论结束后，最终输出如下JSON结构，不要输出其他内容：
```json
{{
    "entity": [
        {{"label": "药品", "attributes": ["商品名","分子式","药物成分"...]}},
        {{"label": "疾病", "attributes": ["疾病名称","ICD编码",...]}}
    ],
    "relation": [
        {{"head_label": "药品", "relation": "治疗", "tail_label": "疾病"}},
        ...
    ]
}}
```

# 注意事项：
- 合并过程需详细记录每一步的思考和决策理由，尤其是冲突解决和创新融合的部分
- 确保最终schema的一致性和完整性

# 输入schema如下：
{schemas_input}

请开始多专家协作合并！
"""

LOAD_PREDEFINED_SCHEMA = """
以下为已有的实体和关系schema（可补充，但不要修改已有的实体和关系）：

## 预定义实体（属性）：
{predefined_entity}

## 预定义关系：
{predefined_relation}

请注意：你可以在此基础上补充新的内容，如新的实体、属性、关系，但**不要修改和删除已有的实体、属性、关系**，因为这些内容已经经过专家review。
"""
